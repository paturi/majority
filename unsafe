import math
# p2a is the number of levels where clauses have one type 2 unsafe variable
# p2b is the number of levels where clauses have one type 2 unsafe variable
# p2c is the number of levels where clauses have one type 2 unsafe variable
# l3 is the number of levels with 3 marked edges
# l0+l1+l2+l3 =1/2; l1+2*l2+3*l3 = 1/2; l0 >= 1/6
alpha = 13/6
#attn = 2.0597
#attn = 2
def L1(d,u1):
  if d == 0:
    return 1
  elif u1 == 0
    return 13*2**(d-1)/6
  else:
    t1 = 13*L0(d-1,u1)
    t2 = 5*L0(d-1,u1-1)/3 + L1(d-1,u1-1)/2
    t = max(t1,t2)
    return t
def L0(d, u1):
  if d == 0:
    return 1
  elif u1 == 0:
    return 2**d
  else:
    t = L1(d-1, u1-1) +3*L0(d-1,u1-1)/2
    return t
d = 0
u1 = 0
out0= L0(0,0)
print(d,u1, out0, out1)
